# This is a basic workflow to help you get started with Actions

name: DAST-ZAP

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
          
      - name: Github Runner Public IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Print Github Runner Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}
      
      - name: whitelist runner IP Address
        #aws s3 sync ./build s3://test-bucket
        run: |
          aws ec2 create-network-acl-entry --network-acl-id acl-00c482d30cef5efcf --ingress --rule-number 90 --cidr-block ${{ steps.ip.outputs.ipv4 }}/32 --rule-action allow
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-2'
        
      #- name: Whitelist Runner IP on AWS
      #  uses: dunno
        
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://dvwa-samp-11vtckhdz9fty.eba-mfpqrsmp.us-east-2.elasticbeanstalk.com/'
          #rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: true
          issue_title: "ZAP_report"
